CREATE TABLE Product(
    product_id INTEGER GENERATED ALWAYS AS IDENTITY,
    product_name VARCHAR2(100) NOT NULL,
    material_name VARCHAR(100),
    product_price NUMBER(*, 2),
    weight_per_unit NUMBER(*,2)
);

ALTER TABLE Product
ADD CONSTRAINT product_id PRIMARY KEY (product_id)

CREATE TABLE Customer(
    customer_id INTEGER GENERATED ALWAYS AS IDENTITY,
    customer_name VARCHAR2(100),
    contact_number VARCHAR2(100),
    email VARCHAR2(100),
    address VARCHAR2(100),
    loyalty_tier INTEGER,
    register_date DATE,
    preferred_sales_channel VARCHAR2(100),
    PRIMARY KEY (customer_id)
);

CREATE TABLE Agent(
    agent_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    agent_name VARCHAR2(100),
    contact_number VARCHAR2(100),
    email VARCHAR2(100),
    agent_tier VARCHAR2(100),
    commission_percentage NUMBER(*,2),
    PRIMARY KEY (agent_id)
);

ALTER TABLE Product
MODIFY product_id GENERATED BY DEFAULT AS IDENTITY

ALTER TABLE Customer
MODIFY customer_id GENERATED BY DEFAULT AS IDENTITY

CREATE TABLE Delivery_Partner(
    delivery_partner_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    partner_name VARCHAR2(100),
    email VARCHAR2(100),
    service_area VARCHAR2(100),
    vehicles VARCHAR2(255),
    contact_number VARCHAR2(100),
    partnership_date DATE,
    PRIMARY KEY(delivery_partner_id)
);

CREATE TABLE Employee(
    employee_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    employee_name VARCHAR2(100),
    role_type VARCHAR2(100),
    email VARCHAR2(100),
    salary NUMBER(*,2),
    hire_date DATE,
    contact_number VARCHAR2(100)
);

ALTER TABLE Employee
ADD CONSTRAINT employee_id PRIMARY KEY (employee_id)

CREATE TABLE Branch_Retail(
    branch_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    employee_id INTEGER NOT NULL,
    branch_name VARCHAR(100),
    location VARCHAR(100),
    PRIMARY KEY(branch_id),
    FOREIGN KEY(employee_id) REFERENCES Employee(employee_id)
);

ALTER TABLE Employee
ADD branch_id INTEGER NOT NULL REFERENCES Branch_Retail(branch_id)

CREATE TABLE Inventory_Product(
    inventory_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    branch_id INTEGER NOT NULL,
    employee_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    quantity INTEGER,
    PRIMARY KEY(inventory_id),
    FOREIGN KEY(branch_id) REFERENCES Branch_Retail(branch_id),
    FOREIGN KEY(employee_id) REFERENCES Employee(employee_id),
    FOREIGN KEY(product_id) REFERENCES Product(product_id)
);

CREATE TABLE Supplier(
    supplier_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    supplier_name VARCHAR2(100),
    contact_number VARCHAR2(100),
    email VARCHAR2(100),
    address VARCHAR2(100),
    city VARCHAR2(100),
    PRIMARY KEY(supplier_id)
);

CREATE TABLE Inventory_Raw_Material(
    material_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    supplier_id INTEGER NOT NULL,
    employee_id INTEGER NOT NULL,
    material_name VARCHAR2(100),
    weight_per_unit NUMBER(*,2),
    total_weight NUMBER(*,2),
    reorder_weight NUMBER(*,2),
    PRIMARY KEY(material_id),
    FOREIGN KEY(supplier_id) REFERENCES Supplier(supplier_id),
    FOREIGN KEY(employee_id) REFERENCES Employee(employee_id)
);

CREATE TABLE Orders(
    order_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    customer_id INTEGER NOT NULL,
    agent_id INTEGER NOT NULL,
    delivery_partner_id INTEGER NOT NULL,
    delivery_date DATE,
    order_status VARCHAR2(100),
    sales_channel VARCHAR2(100),
    delivery_status VARCHAR2(100),
    PRIMARY KEY(order_id),
    FOREIGN KEY(customer_id) REFERENCES Customer(customer_id),
    FOREIGN KEY(agent_id) REFERENCES Agent(agent_id),
    FOREIGN KEY(delivery_partner_id) REFERENCES Delivery_Partner(delivery_partner_id)
);

CREATE TABLE Product_Order(
    product_id INTEGER NOT NULL,
    order_id INTEGER NOT NULL,
    quantity INTEGER,
    PRIMARY KEY(product_id, order_id),
    FOREIGN KEY(product_id) REFERENCES Product(product_id),
    FOREIGN KEY(order_id) REFERENCES Orders(order_id)
);

CREATE TABLE Feedback(
    feedback_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    customer_id INTEGER NOT NULL,
    order_id INTEGER NOT NULL,
    feedback_date DATE,
    rating NUMBER(*,2),
    comments VARCHAR2(500),
    PRIMARY KEY(feedback_id)
);

